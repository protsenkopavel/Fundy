services:
#  fundy-db:
#    image: postgres:16.9
#    ports:
#      - "${DB_PORT_EXTERNAL}:${DB_PORT_INTERNAL}"
#    restart: unless-stopped
#    env_file:
#      - .env
#    volumes:
#      - fundy-db-data:/var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-fundy} || exit 1" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#      start_period: 10s
#    networks: [ app-net ]

  fundy:
    build:
      context: .
    ports:
      - "${SERVER_PORT_EXTERNAL}:${SERVER_PORT_INTERNAL}"
    restart: unless-stopped
#    depends_on:
#      fundy-db:
#        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://${SERVER_HOST}:${SERVER_PORT_INTERNAL}/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks: [ app-net ]
#
#volumes:
#  fundy-db-data:

  fundy-frontend:
    build:
      context: ./fundy-frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT_EXTERNAL:-3000}:80"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - fundy
    networks: [ app-net ]

networks:
  app-net:
    driver: bridge